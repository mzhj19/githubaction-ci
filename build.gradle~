plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.25.0'
//    id 'org.sonarqube' version '4.0.0.2929'
    id "org.sonarqube" version "6.0.1.5171" // sonarqube cloud
    id 'jacoco'
}

group = 'org.mdzahidhasanjamil'
version = '0.0.1-SNAPSHOT'

apply from: "$rootDir/gradle-config/spotless.gradle"
apply from: "$rootDir/gradle-config/sonarqube.gradle"


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sonar {
    properties {
        property "sonar.projectKey", "my-springboot-app"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "squ_985ad189ce0250af29ece166717040cbca2d10ec"
    }
}

// jacoco
jacoco {
    toolVersion = "0.8.8"
}

tasks.named('test') {
    finalizedBy tasks.named('jacocoTestReport') // Run JaCoCo after tests
}

tasks.named('jacocoTestReport') {
    dependsOn tasks.named('test')
    reports {
        xml.required.set(true)  // Needed for SonarQube
        csv.required.set(false)
        html.required.set(true)
    }
}





configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
