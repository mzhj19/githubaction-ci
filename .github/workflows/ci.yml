name: Docker image creation and push to registry through CI

#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

on:
  workflow_run:
    workflows: ["SonarQube Quality Test"]
    types:
      - completed

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Ensure gradlew has execute permissions
      - name: Set execute permissions on gradlew
        run: chmod +x ./gradlew

      # Build the JAR with Gradle
      - name: Build with Gradle
        run: ./gradlew clean build

      # Run tests with Gradle
      - name: Run tests
        run: ./gradlew test

      # Read the current version
      - name: Read version
        id: read_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      # Build the Docker image with the version tag
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag mzhj19/cicd1:${{ env.VERSION }}

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: docker push mzhj19/cicd1:${{ env.VERSION }}

      # Increment version number
      - name: Increment version
        if: success()
        id: increment_version
        run: |
          # Parse current version
          VERSION=$(cat version.txt)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          # Increment the PATCH version
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          # Update version.txt
          echo "$NEW_VERSION" > version.txt

          # Output new version
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Commit updated version.txt
      - name: Commit updated version.txt
        if: success()
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add version.txt
          git commit -m "Increment version to ${{ env.NEW_VERSION }}"
          git push
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
